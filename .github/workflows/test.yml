name: Tests

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test:
    name: "Python ${{ matrix.python-version }} tests"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.13"]
    steps:
      - name: Checkout the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov pytest-asyncio

      - name: Run quick API tests
        run: |
          echo "üöÄ Running fastest API tests..."
          python -m pytest tests/test_api.py -v --tb=short

      - name: Run all unit tests with coverage
        run: |
          echo "üß™ Running comprehensive test suite..."
          python -m pytest tests/ \
            --cov=custom_components.idokep \
            --cov-report=xml \
            --cov-report=term-missing \
            --cov-fail-under=80 \
            -v

      - name: Upload coverage to Codecov
        if: matrix.python-version == '3.13'
        uses: codecov/codecov-action@v5
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  test-nox:
    name: "Nox test sessions"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: "3.13"
          cache: "pip"

      - name: Install nox
        run: python -m pip install nox

      - name: Run super-quick tests (API only)
        run: nox -s super-quick

      - name: Run quick tests (no Home Assistant)
        run: nox -s quick-test

      - name: Run safety check
        run: nox -s safety

  lint-and-test:
    name: "Combined lint and test"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: "3.13"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov pytest-asyncio pylint

      - name: Run comprehensive check script
        run: |
          echo "üîç Running comprehensive checks..."
          python check.py --coverage

      - name: Upload coverage from check script
        uses: codecov/codecov-action@v5
        with:
          file: ./coverage.xml
          flags: comprehensive
          name: codecov-check-script
          fail_ci_if_error: false

  test-minimal:
    name: "Minimal test environment"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: "3.13"
          cache: "pip"

      - name: Install minimal dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest aiohttp beautifulsoup4 homeassistant pytest-asyncio

      - name: Run fast API tests only
        run: |
          echo "‚ö° Running minimal fast tests..."
          python fast_test.py

  test-integration:
    name: "Integration test simulation"
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main'
    steps:
      - name: Checkout the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: "3.13"
          cache: "pip"

      - name: Install full test dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov pytest-asyncio nox

      - name: Run all test scenarios
        run: |
          echo "üéØ Running comprehensive integration scenarios..."

          # Test 1: API client only (fastest)
          echo "Test 1: API client tests"
          make test-api

          # Test 2: All unit tests
          echo "Test 2: Full unit test suite"
          python -m pytest tests/ -v

          # Test 3: Nox sessions
          echo "Test 3: Nox test sessions"
          nox -s tests

      - name: Generate test report
        run: |
          echo "üìä Test execution summary:"
          echo "‚úÖ API tests: Fast feedback loop verified"
          echo "‚úÖ Unit tests: Comprehensive coverage verified"
          echo "‚úÖ Nox sessions: Multi-environment testing verified"
          echo "‚úÖ Integration: Full workflow validated"
